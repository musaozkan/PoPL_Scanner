LEFTPAR 1:1
DEFINE 1:2
LEFTPAR 1:10
IDENTIFIER 1:11
IDENTIFIER 1:21
RIGHTPAR 1:22
LEFTPAR 2:9
LET 2:11
IDENTIFIER 2:15
LEFTPAR 2:19
LEFTPAR 2:20
IDENTIFIER 2:21
NUMBER 2:26
RIGHTPAR 2:27
LEFTPAR 2:29
IDENTIFIER 2:30
NUMBER 2:34
RIGHTPAR 2:35
LEFTPAR 2:37
IDENTIFIER 2:38
NUMBER 2:40
RIGHTPAR 2:41
RIGHTPAR 2:42
LEFTPAR 3:15
IF 3:17
LEFTPAR 3:20
IDENTIFIER 3:21
IDENTIFIER 3:23
IDENTIFIER 3:25
RIGHTPAR 3:26
IDENTIFIER 3:28
LEFTPAR 3:32
IDENTIFIER 3:33
IDENTIFIER 3:37
LEFTPAR 3:41
IDENTIFIER 3:42
IDENTIFIER 3:44
IDENTIFIER 3:49
RIGHTPAR 3:52
LEFTPAR 3:54
IDENTIFIER 3:55
IDENTIFIER 3:57
NUMBER 3:59
RIGHTPAR 3:60
RIGHTPAR 3:61
RIGHTPAR 3:62
LEFTPAR 4:15
DEFINE 4:16
IDENTIFIER 4:23
IDENTIFIER 4:28
RIGHTPAR 4:29
RIGHTPAR 4:30
RIGHTPAR 4:31
<Program>
 <toplevelform>
  LEFTPAR (()
  <secondlevelform>
   <definition>
    define (define)
    <definitionRight>
     LEFTPAR (()
     IDENTIFIER (fibonacci)
     <ArgList>
      IDENTIFIER (n)
      <ArgList>
     RIGHTPAR ())
     <Statements>
      <expression>
       LEFTPAR (()
       <expr>
        <LetExpression>
         let (let)
         <LetExpr>
          IDENTIFIER (fib)
          LEFTPAR (()
          <VarDefs>
           LEFTPAR (()
           IDENTIFIER (prev)
           <expression>
            NUMBER (0)
           RIGHTPAR ())
           <VarDef>
            <VarDefs>
             LEFTPAR (()
             IDENTIFIER (cur)
             <expression>
              NUMBER (1)
             RIGHTPAR ())
             <VarDef>
              <VarDefs>
               LEFTPAR (()
               IDENTIFIER (i)
               <expression>
                NUMBER (0)
               RIGHTPAR ())
               <VarDef>
          RIGHTPAR ())
          <Statements>
           <expression>
            LEFTPAR (()
            <expr>
             <IfExpression>
              if (if)
              <expression>
               LEFTPAR (()
               <expr>
                <FunCall>
                 IDENTIFIER (=)
                 <expressions>
                  <expression>
                   IDENTIFIER (i)
                  <expressions>
                   <expression>
                    IDENTIFIER (n)
                   <expressions>
               RIGHTPAR ())
              <expression>
               IDENTIFIER (cur)
              <EndExpression>
               <expression>
                LEFTPAR (()
                <expr>
                 <FunCall>
                  IDENTIFIER (fib)
                  <expressions>
                   <expression>
                    IDENTIFIER (cur)
                   <expressions>
                    <expression>
                     LEFTPAR (()
                     <expr>
                      <FunCall>
                       IDENTIFIER (+)
                       <expressions>
                        <expression>
                         IDENTIFIER (prev)
                        <expressions>
                         <expression>
                          IDENTIFIER (cur)
                         <expressions>
                     RIGHTPAR ())
                    <expressions>
                     <expression>
                      LEFTPAR (()
                      <expr>
                       <FunCall>
                        IDENTIFIER (+)
                        <expressions>
                         <expression>
                          IDENTIFIER (i)
                         <expressions>
                          <expression>
                           NUMBER (1)
                          <expressions>
                      RIGHTPAR ())
                     <expressions>
                RIGHTPAR ())
            RIGHTPAR ())
